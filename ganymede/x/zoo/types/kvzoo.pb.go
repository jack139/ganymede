// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ganymede/zoo/kvzoo.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Kvzoo struct {
	Owner     string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	ZooKey    string `protobuf:"bytes,2,opt,name=zooKey,proto3" json:"zooKey,omitempty"`
	ZooValue  string `protobuf:"bytes,3,opt,name=zooValue,proto3" json:"zooValue,omitempty"`
	LastDate  string `protobuf:"bytes,4,opt,name=lastDate,proto3" json:"lastDate,omitempty"`
	LinkOwner string `protobuf:"bytes,5,opt,name=linkOwner,proto3" json:"linkOwner,omitempty"`
	Creator   string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *Kvzoo) Reset()         { *m = Kvzoo{} }
func (m *Kvzoo) String() string { return proto.CompactTextString(m) }
func (*Kvzoo) ProtoMessage()    {}
func (*Kvzoo) Descriptor() ([]byte, []int) {
	return fileDescriptor_749e414031aaa093, []int{0}
}
func (m *Kvzoo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Kvzoo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Kvzoo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Kvzoo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kvzoo.Merge(m, src)
}
func (m *Kvzoo) XXX_Size() int {
	return m.Size()
}
func (m *Kvzoo) XXX_DiscardUnknown() {
	xxx_messageInfo_Kvzoo.DiscardUnknown(m)
}

var xxx_messageInfo_Kvzoo proto.InternalMessageInfo

func (m *Kvzoo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Kvzoo) GetZooKey() string {
	if m != nil {
		return m.ZooKey
	}
	return ""
}

func (m *Kvzoo) GetZooValue() string {
	if m != nil {
		return m.ZooValue
	}
	return ""
}

func (m *Kvzoo) GetLastDate() string {
	if m != nil {
		return m.LastDate
	}
	return ""
}

func (m *Kvzoo) GetLinkOwner() string {
	if m != nil {
		return m.LinkOwner
	}
	return ""
}

func (m *Kvzoo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*Kvzoo)(nil), "ganymede.zoo.Kvzoo")
}

func init() { proto.RegisterFile("ganymede/zoo/kvzoo.proto", fileDescriptor_749e414031aaa093) }

var fileDescriptor_749e414031aaa093 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xd0, 0x31, 0x4b, 0xc4, 0x30,
	0x18, 0xc6, 0xf1, 0x46, 0x6d, 0xf5, 0x82, 0x53, 0x10, 0x09, 0x22, 0x41, 0x9c, 0x5c, 0x6c, 0x07,
	0x37, 0x47, 0x71, 0xbb, 0x41, 0x10, 0x71, 0x70, 0xcb, 0xd5, 0x50, 0x8e, 0x4b, 0xfb, 0x94, 0xe6,
	0x3d, 0x35, 0xf9, 0x14, 0x7e, 0x09, 0xbf, 0x8b, 0xe3, 0x8d, 0x8e, 0xd2, 0x7e, 0x11, 0xb9, 0x9c,
	0xbd, 0x1b, 0xff, 0xef, 0x6f, 0x78, 0xe1, 0xe1, 0xb2, 0xd2, 0x8d, 0xaf, 0xcd, 0xab, 0x29, 0x02,
	0x50, 0x2c, 0xde, 0x02, 0x90, 0xb7, 0x1d, 0x08, 0xe2, 0x78, 0x94, 0x3c, 0x00, 0x97, 0x5f, 0x8c,
	0xa7, 0xd3, 0xb5, 0x8a, 0x13, 0x9e, 0xe2, 0xbd, 0x31, 0x9d, 0x64, 0x17, 0xec, 0x6a, 0xf2, 0xb8,
	0x09, 0x71, 0xca, 0xb3, 0x00, 0x4c, 0x8d, 0x97, 0x7b, 0xf1, 0xfc, 0x5f, 0xe2, 0x8c, 0x1f, 0x05,
	0xe0, 0x59, 0xdb, 0xa5, 0x91, 0xfb, 0x51, 0xb6, 0xbd, 0x36, 0xab, 0x1d, 0xdd, 0x6b, 0x32, 0xf2,
	0x60, 0x63, 0x63, 0x8b, 0x73, 0x3e, 0xb1, 0xf3, 0x66, 0xf1, 0x10, 0x3f, 0xa5, 0x11, 0x77, 0x07,
	0x21, 0xf9, 0x61, 0xd9, 0x19, 0x4d, 0xe8, 0x64, 0x16, 0x6d, 0xcc, 0xbb, 0xa7, 0xef, 0x5e, 0xb1,
	0x55, 0xaf, 0xd8, 0x6f, 0xaf, 0xd8, 0xe7, 0xa0, 0x92, 0xd5, 0xa0, 0x92, 0x9f, 0x41, 0x25, 0x2f,
	0xb7, 0xd5, 0x9c, 0xac, 0x9e, 0xe5, 0xde, 0x86, 0x56, 0xfb, 0xbc, 0x44, 0x5d, 0x54, 0x4b, 0xdd,
	0x90, 0x46, 0x51, 0xc2, 0xd5, 0x70, 0xd7, 0x64, 0x1c, 0x15, 0xdb, 0x3d, 0x3e, 0xe2, 0x22, 0xe4,
	0x5b, 0xe3, 0x66, 0x59, 0x9c, 0xe4, 0xe6, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x87, 0x47, 0x78, 0x3a,
	0x2e, 0x01, 0x00, 0x00,
}

func (m *Kvzoo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Kvzoo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Kvzoo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintKvzoo(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.LinkOwner) > 0 {
		i -= len(m.LinkOwner)
		copy(dAtA[i:], m.LinkOwner)
		i = encodeVarintKvzoo(dAtA, i, uint64(len(m.LinkOwner)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.LastDate) > 0 {
		i -= len(m.LastDate)
		copy(dAtA[i:], m.LastDate)
		i = encodeVarintKvzoo(dAtA, i, uint64(len(m.LastDate)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ZooValue) > 0 {
		i -= len(m.ZooValue)
		copy(dAtA[i:], m.ZooValue)
		i = encodeVarintKvzoo(dAtA, i, uint64(len(m.ZooValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ZooKey) > 0 {
		i -= len(m.ZooKey)
		copy(dAtA[i:], m.ZooKey)
		i = encodeVarintKvzoo(dAtA, i, uint64(len(m.ZooKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintKvzoo(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintKvzoo(dAtA []byte, offset int, v uint64) int {
	offset -= sovKvzoo(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Kvzoo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovKvzoo(uint64(l))
	}
	l = len(m.ZooKey)
	if l > 0 {
		n += 1 + l + sovKvzoo(uint64(l))
	}
	l = len(m.ZooValue)
	if l > 0 {
		n += 1 + l + sovKvzoo(uint64(l))
	}
	l = len(m.LastDate)
	if l > 0 {
		n += 1 + l + sovKvzoo(uint64(l))
	}
	l = len(m.LinkOwner)
	if l > 0 {
		n += 1 + l + sovKvzoo(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovKvzoo(uint64(l))
	}
	return n
}

func sovKvzoo(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKvzoo(x uint64) (n int) {
	return sovKvzoo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Kvzoo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKvzoo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Kvzoo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Kvzoo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKvzoo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKvzoo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZooKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKvzoo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKvzoo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ZooKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZooValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKvzoo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKvzoo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ZooValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKvzoo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKvzoo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKvzoo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKvzoo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkOwner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKvzoo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKvzoo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKvzoo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKvzoo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKvzoo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKvzoo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKvzoo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKvzoo
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupKvzoo
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthKvzoo
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthKvzoo        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKvzoo          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupKvzoo = fmt.Errorf("proto: unexpected end of group")
)
